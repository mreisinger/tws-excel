VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cTWSControl"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'==================
' local constants
'==================
Const STR_CONNECTION_CLOSED = "Connection to TWS is closed"

' data members
Public WithEvents m_TWSControl As TWS
Attribute m_TWSControl.VB_VarHelpID = -1
Public m_contractInfo As TWSLib.IContract
Public m_orderInfo As TWSLib.IOrder
Public m_execFilter As TWSLib.IExecutionFilter
Public m_subscription As TWSLib.IScannerSubscription
Public m_orderId As Long
Public m_isConnected As Boolean
Public m_maxDouble As Double
Public m_maxLong As Long

'===============
' constructor
'===============
Private Sub Class_Initialize()
    Set m_TWSControl = New TWS
    m_maxDouble = m_TWSControl.nbboPriceCap
    m_maxLong = m_TWSControl.minQty
    m_isConnected = False
    refreshHistData = True
End Sub

'===============
' destructor
'===============
Private Sub Class_Terminate()
    Set m_TWSControl = Nothing
End Sub


'=======================================
' TWS Control - Events generated by ActiveX TWS control
'=======================================
' connection closed
Private Sub m_TWSControl_connectionClosed()
    TWS.m_isConnected = False
End Sub

' error
Private Sub m_TWSControl_errMsg(ByVal id As Long, ByVal errorCode As Long, ByVal errorMsg As String)
   
    On Error Resume Next
    
    Call LogMessage(id, errorCode, errorMsg)
    
End Sub

Private Sub m_TWSControl_historicalDataEnd(ByVal reqId As Long, ByVal startDate As String, ByVal endDate As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_HISTDATA).FinishUpdateHistoricalData(reqId, startDate, endDate)
End Sub

' market data type responce
Private Sub m_TWSControl_marketDataType(ByVal reqId As Long, ByVal marketDataType As Long)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_TICKERS).UpdateMarketDataType(reqId, marketDataType)
End Sub

' next valid Id
Private Sub m_TWSControl_nextValidId(ByVal id As Long)
    On Error Resume Next
  '  MsgBox ("next valid id = " & id)
    m_orderId = id
End Sub


'-----------------------------
' orders events
'-----------------------------
Private Sub m_TWSControl_orderStatus(ByVal id As Long, ByVal status As String, ByVal filled As Double, ByVal remaining As Double, ByVal avgFillPrice As Double, ByVal permId As Long, ByVal parentId As Long, ByVal lastFillPrice As Double, ByVal clientId As Long, ByVal whyHeld As String)
    On Error Resume Next
    ' update Orders sheet data
        Call ThisWorkbook.Sheets(SHEET_NAME_BASICORDERS).UpdateOrderStatus(id, status, filled, remaining, avgFillPrice, parentId, lastFillPrice)
        Call ThisWorkbook.Sheets(SHEET_NAME_CONDORDERS).UpdateOrderStatus(id, status, filled, remaining, avgFillPrice, parentId, lastFillPrice)
        Call ThisWorkbook.Sheets(SHEET_NAME_ADVANCEDORDERS).UpdateOrderStatus(id, status, filled, remaining, avgFillPrice, parentId, lastFillPrice)
        Call ThisWorkbook.Sheets(SHEET_NAME_ADVISORS).UpdateOrderStatus(id, status, filled, remaining, avgFillPrice, parentId, lastFillPrice)

    On Error Resume Next
    ' update Open Orders sheet data
    Call ThisWorkbook.Sheets(SHEET_NAME_OPENORDERS).UpdateOrderStatus(id, status, filled, remaining, avgFillPrice, parentId, lastFillPrice)
End Sub

Private Sub m_TWSControl_openOrderEx(ByVal orderId As Long, ByVal contract As TWSLib.IContract, ByVal order As TWSLib.IOrder, ByVal orderState As TWSLib.IOrderState)
    On Error Resume Next
    If order.whatIf Then
        ' update order status (WhatIf) in Basic Orders/Advance Orders sheet
         Call ThisWorkbook.Sheets(SHEET_NAME_BASICORDERS).UpdateWhatIfInfo(orderId, contract, order, orderState)
         Call ThisWorkbook.Sheets(SHEET_NAME_ADVANCEDORDERS).UpdateWhatIfInfo(orderId, contract, order, orderState)
         Call ThisWorkbook.Sheets(SHEET_NAME_ADVISORS).UpdateWhatIfInfo(orderId, contract, order, orderState)
    Else
        ' update Open Orders sheet data
        Call ThisWorkbook.Sheets(SHEET_NAME_OPENOORDERS).UpdateOpenOrder(orderId, contract, order, orderState)
    End If
End Sub

'-----------------------------
' market data  tickers events
'-----------------------------
Private Sub m_TWSControl_tickEFP(ByVal tickerId As Long, ByVal field As Long, ByVal basisPoints As Double, ByVal formattedBasisPoints As String, ByVal totalDividends As Double, ByVal holdDays As Long, ByVal futureExpiry As String, ByVal dividendImpact As Double, ByVal dividendsToExpiry As Double)
    'update Tickers sheet with tick EFP
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_TICKERS).UpdateTickersSheetWithTickEFP(tickerId, field, basisPoints, formattedBasisPoints, totalDividends, holdDays, futureExpiry, dividendImpact, dividendsToExpiry)
End Sub

Private Sub m_TWSControl_tickGeneric(ByVal id As Long, ByVal tickType As Long, ByVal value As Double)
    'update Tickers sheet with tick generic
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_TICKERS).UpdateTickersSheetWithTickGeneric(id, tickType, value)
End Sub

Private Sub m_TWSControl_tickOptionComputation(ByVal id As Long, ByVal tickType As Long, ByVal impliedVol As Double, ByVal delta As Double, ByVal optPrice As Double, ByVal pvDividend As Double, ByVal gamma As Double, ByVal vega As Double, ByVal theta As Double, ByVal undPrice As Double)
    'update Tickers sheet with new data
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_TICKERS).UpdateTickersSheetWithOptionComp(id, tickType, impliedVol, delta, optPrice, pvDividend, gamma, vega, theta, undPrice)
End Sub

Private Sub m_TWSControl_tickPrice(ByVal id As Long, ByVal tickType As Long, ByVal price As Double, ByVal canAutoExecute As Long)
    'update Tickers sheet with new price
    On Error Resume Next
    Call UpdateArrayWithPrice(id, tickType, price)
End Sub

Private Sub m_TWSControl_tickSize(ByVal id As Long, ByVal tickType As Long, ByVal size As Long)
    'update Tickers sheet with new size
    On Error Resume Next
    Call UpdateArrayWithSize(id, tickType, size)
End Sub

Private Sub m_TWSControl_tickString(ByVal id As Long, ByVal tickType As Long, ByVal value As String)
    'update Tickers sheet with new string
    On Error Resume Next
    If tickType = FUNDAMENTAL_RATIOS Then
        ' fundamental ratios
        Call ThisWorkbook.Sheets(SHEET_NAME_FUNDAMENTALS).UpdateFundamentalRatios(id, tickType, value)
    Else
        Call UpdateArrayWithString(id, tickType, value)
    End If
End Sub

'-----------------------------
' market depth events
'-----------------------------
Private Sub m_TWSControl_updateMktDepth(ByVal id As Long, ByVal position As Long, ByVal operation As Long, ByVal side As Long, ByVal price As Double, ByVal size As Long)
    ' update Market Depth sheet with new data
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_MKTDEPTH).UpdateMarketDepth(id, position, STR_EMPTY, operation, side, price, size)
    
End Sub

Private Sub m_TWSControl_updateMktDepthL2(ByVal id As Long, ByVal position As Long, ByVal marketMaker As String, ByVal operation As Long, ByVal side As Long, ByVal price As Double, ByVal size As Long)
    ' update Market Depth sheet with new data
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_MKTDEPTH).UpdateMarketDepth(id, position, marketMaker, operation, side, price, size)
End Sub

'-----------------------------
' news bulletins events
'-----------------------------
Private Sub m_TWSControl_updateNewsBulletin(ByVal msgId As Integer, ByVal msgType As Integer, ByVal message As String, ByVal origExchange As String)
    ' update News Bulletins page with new data
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_BULLETINS).updateNewsBulletins(msgId, msgType, message, origExchange)
End Sub

'-----------------------------
' accountportfolio events
'-----------------------------
Private Sub m_TWSControl_managedAccounts(ByVal accountsList As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_ACCOUNT).UpdateManagedAccounts(accountsList)
End Sub

Private Sub m_TWSControl_updateAccountTime(ByVal timeStamp As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_ACCOUNT).UpdateTimeStamp(timeStamp)
End Sub

Private Sub m_TWSControl_updateAccountValue(ByVal key As String, ByVal value As String, ByVal curency As String, ByVal accountName As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_ACCOUNT).updateAccountValue(key, value, curency, accountName)
End Sub

Private Sub m_TWSControl_updatePortfolioEx(ByVal contract As TWSLib.IContract, ByVal position As Double, ByVal marketPrice As Double, ByVal marketValue As Double, ByVal averageCost As Double, ByVal unrealizedPNL As Double, ByVal realizedPNL As Double, ByVal accountName As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_PORTFOLIO).updatePortfolio(contract, position, marketPrice, marketValue, averageCost, unrealizedPNL, realizedPNL, accountName)
End Sub

'----------------------------
' FA events
'----------------------------
Private Sub m_TWSControl_receiveFA(ByVal faDataType As Long, ByVal cxml As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_ACCOUNT).UpdateFA(faDataType, cxml)
End Sub

'-----------------------------
' execution events
'-----------------------------
Private Sub m_TWSControl_execDetailsEx(ByVal reqId As Long, ByVal contract As TWSLib.IContract, ByVal execution As TWSLib.IExecution)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_EXECUTIONS).UpdateExecution(reqId, contract, execution)
End Sub

'-----------------------------
' historical data events
'-----------------------------
Private Sub m_TWSControl_historicalData(ByVal reqId As Long, ByVal histDate As String, ByVal histOpen As Double, ByVal histHigh As Double, ByVal histLow As Double, ByVal histClose As Double, ByVal histVolume As Long, ByVal barCount As Long, ByVal WAP As Double, ByVal hasGaps As Long)
    On Error Resume Next
    Call UpdateHistoricalData(reqId, histDate, histOpen, histHigh, histLow, histClose, histVolume, barCount, WAP, hasGaps)
End Sub

'---------------------------------------
' contractbond contract details events
'---------------------------------------
Private Sub m_TWSControl_contractDetailsEx(ByVal reqId As Long, ByVal contractDetails As TWSLib.IContractDetails)
    On Error Resume Next
    
    If contractDetails.Summary.secType = SECTYPE_BOND Then
        Call ThisWorkbook.Sheets(SHEET_NAME_BONDCONTRACTDETAILS).UpdateContractDetails(reqId, contractDetails)
    Else
        Call UpdateContractDetails(reqId, contractDetails)
    End If
End Sub

Private Sub m_TWSControl_contractDetailsEnd(ByVal reqId As Long)
    On Error Resume Next
    
    If reqId >= ID_CONTRACTDETAILS And reqId < ID_BONDCONTRACTDETAILS Then
        Call ThisWorkbook.Sheets(SHEET_NAME_CONTRACTDETAILS).contractDetailsEnd(reqId)
    ElseIf reqId >= ID_BONDCONTRACTDETAILS And reqId < ID_REALTIMEBARS Then
        Call ThisWorkbook.Sheets(SHEET_NAME_BONDCONTRACTDETAILS).contractDetailsEnd(reqId)
    End If
End Sub

'-----------------------------
' real time bars events
'-----------------------------
Private Sub m_TWSControl_realtimeBar(ByVal tickerId As Long, ByVal rtbTime As Long, ByVal rtbOpen As Double, ByVal rtbHigh As Double, ByVal rtbLow As Double, ByVal rtbClose As Double, ByVal rtbVolume As Long, ByVal rtbWAP As Double, ByVal rtbCount As Long)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_REALTIMEBARS).UpdateRealTimeBars(tickerId, rtbTime, rtbOpen, rtbHigh, rtbLow, rtbClose, rtbVolume, rtbWAP, rtbCount)
End Sub

'-----------------------------
' current time events
'-----------------------------
Private Sub m_TWSControl_currentTime(ByVal time As Long)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_GENERAL).UpdateCurrentTime(time)
End Sub

'-----------------------------
' market scanner events
'-----------------------------
Private Sub m_TWSControl_scannerParameters(ByVal xml As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_MARKETSCANNER).UpdateScannerParameters(xml)
End Sub

Private Sub m_TWSControl_scannerDataEx(ByVal reqId As Long, ByVal rank As Long, ByVal contractDetails As TWSLib.IContractDetails, ByVal distance As String, ByVal benchmark As String, ByVal projection As String, ByVal legsStr As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_MARKETSCANNER).UpdateScannerData(reqId, rank, contractDetails, distance, benchmark, projection, legsStr)
End Sub

Private Sub m_TWSControl_scannerDataEnd(ByVal reqId As Long)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_MARKETSCANNER).scannerDataEnd(reqId)
End Sub

'-----------------------------
' fundamentals events
'-----------------------------
Private Sub m_TWSControl_fundamentalData(ByVal reqId As Long, ByVal data As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_FUNDAMENTALS).UpdateFundamentalsData(reqId, data)
End Sub

'-----------------------------
' commission reports
'-----------------------------
Private Sub m_TWSControl_commissionReport(ByVal commissionReport As TWSLib.ICommissionReport)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_COMMISSION_REPORTS).UpdateCommissionReports(commissionReport)
End Sub

'-----------------------------
' account update  multi
'-----------------------------
Private Sub m_TWSControl_accountUpdateMulti(ByVal requestId As Long, ByVal account As String, ByVal modelCode As String, ByVal key As String, ByVal value As String, ByVal curency As String)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_ACCOUNT_UPDATES_MULTI).accountUpdateMulti(requestId, account, modelCode, key, value, curency)
End Sub

'-----------------------------
' positions  multi
'-----------------------------
Private Sub m_TWSControl_positionMulti(ByVal requestId As Long, ByVal account As String, ByVal modelCode As String, ByVal contract As TWSLib.IContract, ByVal position As Double, ByVal avgCost As Double)
    On Error Resume Next
    Call ThisWorkbook.Sheets(SHEET_NAME_POSITIONS_MULTI).positionMulti(requestId, account, modelCode, contract, position, avgCost)
End Sub



